version: '3.7'

services:
    otp6_test.fpm:
        container_name: otp6_test.fpm
        env_file: .env
        build:
            context: docker/otp6_test.fpm
            dockerfile: Dockerfile
        working_dir: /var/www/api
        restart: unless-stopped
        volumes:
            - ./api:/var/www/api
    otp6_test.cli:
        container_name: otp6_test.cli
        env_file: .env
        build:
            context: docker/otp6_test.cli
            dockerfile: Dockerfile
        working_dir: /var/www/api
        volumes:
            - ./api:/var/www/api
    otp6_test.worker:
        container_name: otp6_test.worker
        env_file: .env
        build:
            context: docker/otp6_test.worker
            dockerfile: Dockerfile
        working_dir: /var/www/api
        restart: unless-stopped
        volumes:
            - ./api:/var/www/api
    otp6_test.mysql:
        container_name: otp6_test.mysql
        image: mysql:8
        env_file: .env
        command: --default-authentication-plugin=mysql_native_password
        restart: always
        ports:
            - ${DOCKER_MYSQL_PORT}:3306
        volumes:
            - ./docker/otp6_test.mysql/data/:/var/lib/mysql/
        environment:
            MYSQL_ROOT_PASSWORD: ${DOCKER_NGINX_PORT}
            MYSQL_DATABASE: ${DOCKER_MYSQL_DB}
            MYSQL_USER: ${DOCKER_MYSQL_USER}
    otp6_test.node:
        container_name: otp6_test.node
        volumes:
            - ./frontend:/var/www/frontend
        working_dir: /var/www/frontend
        #    entrypoint: sh -c "npm install && npm run build && npm run start"
        entrypoint: sh -c "npm install && npm run dev"
        build:
            context: ./docker/otp6_test.node
            dockerfile: Dockerfile
        restart: unless-stopped
    otp6_test.nginx:
        container_name: otp6_test.nginx
        image: nginx:latest
        env_file: .env
        restart: unless-stopped
        depends_on:
            - otp6_test.fpm
            - otp6_test.node
        ports:
            - ${DOCKER_NGINX_PORT}:80
        volumes:
            - ./api:/var/www/api
            - ./frontend:/var/www/frontend
            - ./docker/otp6_test.nginx/conf/default.conf:/etc/nginx/conf.d/default.conf

